Resources:
  # InspectionScheduleコマンド用のEventBridgeルール
  LaravelInspectionSchedule:
    Type: "AWS::Events::Rule"
    Properties:
      Name: "LaravelInspectionSchedule"
      ScheduleExpression: "cron(* * * * ? *)"
      State: "ENABLED"
      Targets:
        - Id: "EcsTask"
          Arn: "__CLUSTER_ARN__"
          RoleArn: "__ROLE_ARN__"
          EcsParameters:
            TaskDefinitionArn: "__TASK_DEF_ARN__"
            LaunchType: "FARGATE"
            NetworkConfiguration:
              AwsVpcConfiguration:
                AssignPublicIp: "DISABLED"
                Subnets:
                  - "__SUBNET_ID__"
                SecurityGroups:
                  - "__SECURITY_GROUP_ID__"
            TaskCount: 1
          Input: '{"containerOverrides": [{"name": "portfolio-app-container", "command": ["php", "artisan", "app:inspection-schedule"]}]}'

  # DisposalScheduleコマンド用のEventBridgeルール
  LaravelDisposalSchedule:
    Type: "AWS::Events::Rule"
    Properties:
      Name: "LaravelDisposalSchedule"
      ScheduleExpression: "cron(* * * * ? *)"
      State: "ENABLED"
      Targets:
        - Id: "EcsTask"
          Arn: "__CLUSTER_ARN__"
          RoleArn: "__ROLE_ARN__"
          EcsParameters:
            TaskDefinitionArn: "__TASK_DEF_ARN__"
            LaunchType: "FARGATE"
            NetworkConfiguration:
              AwsVpcConfiguration:
                AssignPublicIp: "DISABLED"
                Subnets:
                  - "__SUBNET_ID__"
                SecurityGroups:
                  - "__SECURITY_GROUP_ID__"
            TaskCount: 1
          Input: '{"containerOverrides": [{"name": "portfolio-app-container", "command": ["php", "artisan", "app:disposal-schedule"]}]}'
