name: EMS Deploy Pipeline
on:
  pull_request:  #プルリクのマージ時自動デプロイ
    types: [closed]
    branches: 
      - main
    paths:
      - '**'

env:
  AWS_REGION: ap-northeast-1
  ECS_CLUSTER: my-portfolio-cluster
  ECS_SERVICE: my-portfolio
  ECS_REPOSITORY: my-portfolio
  ECS_TASK_DEFINITION_API: .aws/task-def-portfolio.json

permissions:
  id-token: write
  contents: read

jobs:
# Test
# Build
  build-and-push:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .
    steps:
      # Checkout code
      - uses: actions/checkout@v4

      - name: (Run Tests Feature Test ここは別jobに分離) Build Image
        run: docker image build -t temp_portfolio_image:latest .

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Push the image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker image tag temp_portfolio_image:latest $ECR_REGISTRY/$ECS_REPOSITORY:${{ github.sha }}
          docker image push $ECR_REGISTRY/$ECS_REPOSITORY:${{ github.sha }}
          echo $ECR_REGISTRY/$ECS_REPOSITORY:${{ github.sha }} > portfolio-image-uri.txt

      - name: Upload the image uri file as an artifact
        uses: actions/upload-artifact@v2
        with:
          name: portfolio-image-uri
          path: portfolio-image-uri.txt

# Deploy
  deploy:
    runs-on: ubuntu-latest
    needs: [build-and-push]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Download the artifact
        uses: actions/download-artifact@v2
        with:
          name: portfolio-image-uri
          path: artifacts

      - name: Define the image URI
        run: |
          echo "API_IMAGE_URI=${cat artifacts/portfolio-image-uri.txt}" >> $GITHUB_ENV

      - name: Fill in the new image URI in the amazon ECS task definition
        id: render-task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION_API }}
          container-name: portfolio-app-container
          image: ${{ env.API_IMAGE_URI }}

      - name: Deploy ECS task
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.render-task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true