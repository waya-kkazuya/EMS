name: EMS CI Pipeline -> Feature Test

on:
  pull_request:
    types: [opened, synchronize]
    branches:
      - main
    paths:
      - '**'

jobs:
  feature-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: ems_testing
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      # Checkout code
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      # Cache
      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      # PHPセットアップ
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, exif, pcntl, bcmath
          coverage: none
          
      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-suggest --optimize-autoloader

      # Set DB_HOST in .env.testing for CI environment
      - name: Set DB_HOST in .env.testing
        run: |
          echo "" >> .env.testing  # 改行を追加
          echo "DB_HOST=mysql" >> .env.testing

      - name: Display .env.testing content
        run: cat .env.testing

      # Install dockerize
      - name: Install dockerize
        run: |
          wget -qO- https://github.com/jwilder/dockerize/releases/download/v0.6.1/dockerize-linux-amd64-v0.6.1.tar.gz | tar xvz -C /usr/local/bin
          dockerize --version

      - name: Generate application key
        run: php artisan key:generate --env=testing

      # # Wait for MySQL to be ready
      # - name: Wait for MySQL to be ready
      #   run: dockerize -wait tcp://mysql:3306 -timeout 2m

      - name: Display environment variables
        run: printenv

      - name: Test MySQL connection
        run: ping -c 4 mysql

      - name: Run migrations
        run: php artisan migrate --env=testing
        env:
          DB_CONNECTION: mysql
          DB_HOST: mysql
          DB_PORT: 3306
          DB_DATABASE: ems_testing
          DB_USERNAME: ems_testing
          DB_PASSWORD: password123

      - name: Run feature tests
        run: php artisan test --env=testing
        env:
          DB_CONNECTION: mysql
          DB_HOST: mysql
          DB_PORT: 3306
          DB_DATABASE: ems_testing
          DB_USERNAME: ems_testing
          DB_PASSWORD: password123