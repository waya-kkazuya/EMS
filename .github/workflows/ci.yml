name: EMS CI Pipeline

on:
  pull_request:
    types: [opened, synchronize]
    branches:
      - main
    paths:
      - '**'
  workflow_dispatch:
env:
  DB_CONNECTION: mysql
  DB_HOST: 127.0.0.1
  DB_PORT: 3306
  DB_DATABASE: ems
  DB_USERNAME: ems
  DB_PASSWORD: password

jobs:
  test:
    runs-on: ubuntu-latest[
    timeout-minutes: 20
    services:
      db:
        image: mysql/mysql-server:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_DATABASE: 'ems'
          MYSQL_USER: 'ems'
          MYSQL_PASSWORD: 'password'
          MYSQL_ROOT_PASSWORD: 'password'
          MYSQL_ALLOW_EMPTY_PASSWORD: 1
        options: >-
          --health-cmd "mysqladmin ping"
          --health-start-period 30s
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP with composer v2
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          tools: composer:v2

      - name: Cache Vendor
        id: cache-vendor
        uses: actions/cache@v4
        with:
          path: ./vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Dependencies
        if: steps.cache-vendor.outputs.cache-hit != 'true'
        run: composer install --quiet --prefer-dist --no-progress --no-interaction --no-scripts --no-ansi
      
      - name: Laravel Setting
        run: |
          cp .env.example .env
          php artisan optimize
          git config --local core.fileMode false
          chmod -R 777 storage bootstrap/cache
      
      - name: PHP Version
        run: php --version
      - name: Composer Version
        run: composer --version
      - name: Laravel Version
        run: php artisan --version
      - name: Composer Validate 
        run: composer validate
      
      - name: Wait for MySQL to be ready
        run: sleep 60

      - name: Run Migrate
        run: php artisan migrate

      - name: Run Tests
        run: php artisan test