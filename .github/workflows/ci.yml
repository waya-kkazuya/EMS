name: EMS CI Pipeline

on:
  pull_request:
    types: [opened, synchronize]
    branches:
      - main
    paths:
      - '**'

jobs:
  feature-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: ems
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Check out the repository
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, exif, pcntl, bcmath, pdo_mysql
          coverage: none

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
          
      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Create .env file
        run: cp .env.example .env

      # Install dockerize
      # - name: Install dockerize
      #   run: |
      #     wget -qO- https://github.com/jwilder/dockerize/releases/download/v0.6.1/dockerize-linux-amd64-v0.6.1.tar.gz | tar xvz -C /usr/local/bin
      #     dockerize --version

      - name: Generate application key
        run: php artisan key:generate

      # # Wait for MySQL to be ready
      # - name: Wait for MySQL to be ready
      #   run: dockerize -wait tcp://mysql:3306 -timeout 2m

      - name: Display Docker networks
        run: docker network ls
  
      - name: Inspect services
        run: docker ps -a

      # - name: Set DB_HOST in .env for CI environment
      #   run: |
      #     sed -i '/DB_HOST/d' .env  # 既存のDB_HOST設定を削除
      #     echo "" >> .env  # 改行を追加
      #     echo "" >> .env  # 改行を追加
      #     echo "DB_HOST=mysql" >> .env  # 新しい設定を追加

      - name: Display .env content
        run: cat .env

      # - name: Display environment variables
      #   run: printenv

      # - name: Test MySQL connection
      #   run: ping -c 4 mysql

      - name: migrate in .env
        run: php artisan migrate

      - name: Run feature tests via PHPUnit
        run: php artisan test